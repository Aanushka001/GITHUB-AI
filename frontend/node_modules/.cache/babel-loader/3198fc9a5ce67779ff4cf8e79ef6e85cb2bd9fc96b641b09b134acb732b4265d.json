{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aanus\\\\Desktop\\\\Github-AI\\\\frontend\\\\src\\\\components\\\\test\\\\CodeViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-tsx';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-markup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeViewer = ({\n  code,\n  language\n}) => {\n  _s();\n  useEffect(() => {\n    // Highlight code when component mounts or code changes\n    Prism.highlightAll();\n  }, [code]);\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  // Map language to Prism language class\n  const getPrismLanguage = lang => {\n    const languageMap = {\n      'javascript': 'javascript',\n      'typescript': 'typescript',\n      'java': 'java',\n      'python': 'python',\n      'jsx': 'jsx',\n      'tsx': 'tsx',\n      'css': 'css',\n      'html': 'markup'\n    };\n    return languageMap[lang] || 'javascript';\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      startIcon: /*#__PURE__*/_jsxDEV(ContentCopyIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this),\n      onClick: handleCopyCode,\n      sx: {\n        position: 'absolute',\n        top: '8px',\n        right: '8px',\n        zIndex: 1,\n        backgroundColor: 'rgba(0, 0, 0, 0.6)',\n        '&:hover': {\n          backgroundColor: 'rgba(0, 0, 0, 0.8)'\n        }\n      },\n      children: \"Copy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        backgroundColor: '#2d2d2d',\n        borderRadius: '4px',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0,\n          padding: '16px',\n          maxHeight: '60vh',\n          overflow: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          className: `language-${getPrismLanguage(language)}`,\n          children: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeViewer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = CodeViewer;\nexport default CodeViewer;\nvar _c;\n$RefreshReg$(_c, \"CodeViewer\");","map":{"version":3,"names":["React","useEffect","Box","Paper","Button","ContentCopyIcon","Prism","jsxDEV","_jsxDEV","CodeViewer","code","language","_s","highlightAll","handleCopyCode","navigator","clipboard","writeText","getPrismLanguage","lang","languageMap","sx","position","children","variant","size","startIcon","fileName","_jsxFileName","lineNumber","columnNumber","onClick","top","right","zIndex","backgroundColor","elevation","borderRadius","overflow","style","margin","padding","maxHeight","className","_c","$RefreshReg$"],"sources":["C:/Users/aanus/Desktop/Github-AI/frontend/src/components/test/CodeViewer.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-javascript';\nimport 'prismjs/components/prism-typescript';\nimport 'prismjs/components/prism-java';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-jsx';\nimport 'prismjs/components/prism-tsx';\nimport 'prismjs/components/prism-css';\nimport 'prismjs/components/prism-markup';\n\nconst CodeViewer = ({ code, language }) => {\n  useEffect(() => {\n    // Highlight code when component mounts or code changes\n    Prism.highlightAll();\n  }, [code]);\n\n  const handleCopyCode = () => {\n    navigator.clipboard.writeText(code);\n  };\n\n  // Map language to Prism language class\n  const getPrismLanguage = (lang) => {\n    const languageMap = {\n      'javascript': 'javascript',\n      'typescript': 'typescript',\n      'java': 'java',\n      'python': 'python',\n      'jsx': 'jsx',\n      'tsx': 'tsx',\n      'css': 'css',\n      'html': 'markup',\n    };\n    \n    return languageMap[lang] || 'javascript';\n  };\n\n  return (\n    <Box sx={{ position: 'relative' }}>\n      <Button\n        variant=\"contained\"\n        size=\"small\"\n        startIcon={<ContentCopyIcon />}\n        onClick={handleCopyCode}\n        sx={{\n          position: 'absolute',\n          top: '8px',\n          right: '8px',\n          zIndex: 1,\n          backgroundColor: 'rgba(0, 0, 0, 0.6)',\n          '&:hover': {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n          },\n        }}\n      >\n        Copy\n      </Button>\n      \n      <Paper \n        elevation={0} \n        sx={{ \n          backgroundColor: '#2d2d2d',\n          borderRadius: '4px',\n          overflow: 'hidden',\n        }}\n      >\n        <pre style={{ margin: 0, padding: '16px', maxHeight: '60vh', overflow: 'auto' }}>\n          <code className={`language-${getPrismLanguage(language)}`}>\n            {code}\n          </code>\n        </pre>\n      </Paper>\n    </Box>\n  );\n};\n\nexport default CodeViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}